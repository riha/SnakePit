@{
    ViewBag.Title = "Index";
}
@section Script {
    <script type="text/javascript">
        var hub;
        var request;
        var snake1;
        var direction = Directions.Right;
        var lastDirection;
        var food;
        var snakeContex, gridContext, foodContext;

        $(function () {
            snakeContext = $("#snake").get(0).getContext('2d');
            gridContext = $("#grid").get(0).getContext('2d');
            foodContext = $("#food").get(0).getContext('2d');

            hub = $.connection.gameHub;
            console.log(hub);

            hub.borderCollision = function () {
                console.log("Crashed with border");
                gameOver();
            };

            hub.selfCollision = function () {
                console.log("Collision with part");
                gameOver();
            };


            //            hub.noFood = function () {
            //                //console.log("Moved ok");
            //                gameContinue();
            //            };

//            hub.foodPosition = function (position) {
//                
//            };

            hub.generateNewFood = function (position) {
                var point = new Point(position.X, position.Y)
                console.log("Food consumed!");
                console.log("Generating food at x:", point.x, " y:", point.y);
                food = new Food(foodContext, point);
            };

            $.connection.hub.start(function () {
                hub.join();
                init();
            });

        });

        function gameOver() {
            //console.log(request);
            cancelRequestAnimFrame(request);
        };

        function gameContinue() {
            //console.log(request);
            request = requestAnimFrame(gameLoop);
        };

        function init() {
            var grid = new Grid(gridContext);

            snake1 = new Snake(new Point(2, 2), snakeContext, grid);
            
            hub.setup(snake1.parts);

            document.onkeydown = function (event) {
                if (event.keyCode == 37 && lastDirection != Directions.Right)
                    direction = Directions.Left;
                else if (event.keyCode == 38 && lastDirection != Directions.Down) {
                    direction = Directions.Up;
                }
                else if (event.keyCode == 39 && lastDirection != Directions.Left) {
                    direction = Directions.Right;
                }
                else if (event.keyCode == 40 && lastDirection != Directions.Up) {
                    direction = Directions.Down
                };
            };

            gameLoop();
        }

        function gameLoop() {
            lastRun = Date.now();

            //TODO: Start by calculating new position, then do all test - if everythings ok draw the new position
            if (snake1.draw(direction, lastRun)) {
                lastDirection = direction;

                hub.validateMove(snake1.parts).done(function (isValidMove) {
                    if (isValidMove) {
                        hub.checkFoodCollision(snake1.parts);
                        request = requestAnimFrame(gameLoop);
                    };
                });

                //Här måste vi skicka hela arrayen med positioner till servern. Den skall då kontrollera eventuella kollisioner

                //                    if (snake1.checkSelfCollision() || snake1.checkBorderCollision()) {
                //                        gameOver();
                //                    } else {
                //                        if (snake1.checkFoodCollision(food)) {
                //                            snake1.grow();
                //                            //food.clear();
                //                            food = new Food(foodContext, snake1);
                //                        }


                //}
            } else {
                request = requestAnimFrame(gameLoop);
            }
        };

    </script>
}
<h2>
    Index</h2>
<canvas id="snake" width="500" height="500">
</canvas>
<canvas id="food" width="500" height="500">
</canvas>
<canvas id="grid" width="500" height="500">
</canvas>
